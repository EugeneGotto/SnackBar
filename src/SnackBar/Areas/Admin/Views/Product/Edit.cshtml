@using SnackBar.Resx
@model SnackBar.ViewModels.ProductEditViewModel
@{
    ViewBag.Title = Resource.Edit;
    Layout = "~/Views/Shared/_Layout.cshtml";
    ICollection<SnackBar.ViewModels.TagViewModel> tagList = TempData["TagList"] as ICollection<SnackBar.ViewModels.TagViewModel> ?? new List<SnackBar.ViewModels.TagViewModel>();
    string lang = string.IsNullOrEmpty(Request.Cookies["lang"]?.Value) ? "en" : Request.Cookies["lang"].Value;
}

<h2>@Resource.EditProduct</h2>
<div class="container">
    @using (Html.BeginForm("Edit", "Product", FormMethod.Post))
    {
        <div class="col-md-8">
            @Html.HiddenFor(model => model.Id)
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Count, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Count, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Count, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Barcode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Barcode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Barcode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="editor-label"><b>@Resource.Tags</b></div>
            @foreach (var tag in tagList)
            {
                <input type="checkbox" name="selectedTags" value="@tag.Id"
                       @(Model.Tags.Any(t => t.Id == tag.Id) ? "checked=\"checked\"" : "") />@(lang.Equals("en") ? tag.Name : tag.NameRu) <br />
            }
        </div>

        <input type="submit" class="btn btn-primary" value="@Resource.Save" />
    }
</div>