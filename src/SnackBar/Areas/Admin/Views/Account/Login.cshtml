@using SnackBar.ViewModels
@using SnackBar.Resx
@model LoginViewModel
@{
    ViewBag.Title = Resource.LogIn;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-6">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>@Resource.UseAdminLogin</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="@Resource.LogIn" class="btn btn-default" />
                    </div>
                </div>
            }
        </section>
    </div>
    @if (string.IsNullOrEmpty(Request.Cookies["PIN"]?.Value))
    {
        <div class="col-md-6">
            <section id="loginBuyerForm">
                @using (Html.BeginForm("Login", "User", new { area = string.Empty }, FormMethod.Post))
                {
                    <h4>@Resource.UsePinLogin</h4>
                    <hr />
                    if (TempData["ErrorPinMessage"] != null)
                    {
                        <div class="alert alert-warning alert-dismissable fade in">
                            <strong>Warning!</strong> @TempData["ErrorPinMessage"].ToString()
                        </div>
                    }
                    if (TempData["ErrorPinMessageRed"] != null)
                    {
                        <div class="alert alert-danger alert-dismissable fade in">
                            <strong>Warning!</strong> @TempData["ErrorPinMessageRed"].ToString()
                        </div>
                    }
                    <div class="form-group">
                        <p>@Resource.InputPin</p>
                        @Html.TextBox("Pin")
                        <input type="submit" value="@Resource.LogIn" class="btn btn-success" />
                    </div>
                }
            </section>
            @using (Html.BeginForm("CreatePin", "Home", new { area = string.Empty }, FormMethod.Post))
            {
                if (TempData["ErrorEmailMessage"] != null)
                {
                    <div class="alert alert-warning alert-dismissable fade in">
                        <strong>Warning!</strong> @TempData["ErrorEmailMessage"].ToString()
                    </div>
                }
                <p>@Resource.NoPinEnterEmail</p>
                <input type="text" name="Email" />
                <input type="submit" class="btn btn-success" value="@Resource.CreateNewPin" />
            }
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}